{"ast":null,"code":"import { Base } from './Base.js';\nexport class Optional extends Base {\n  constructor(type) {\n    let condition = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    super();\n    this.type = type;\n    this.condition = condition;\n  }\n  decode(stream, parent) {\n    let {\n      condition\n    } = this;\n    if (typeof condition === 'function') {\n      condition = condition.call(parent, parent);\n    }\n    if (condition) {\n      return this.type.decode(stream, parent);\n    }\n  }\n  size(val, parent) {\n    let {\n      condition\n    } = this;\n    if (typeof condition === 'function') {\n      condition = condition.call(parent, parent);\n    }\n    if (condition) {\n      return this.type.size(val, parent);\n    } else {\n      return 0;\n    }\n  }\n  encode(stream, val, parent) {\n    let {\n      condition\n    } = this;\n    if (typeof condition === 'function') {\n      condition = condition.call(parent, parent);\n    }\n    if (condition) {\n      return this.type.encode(stream, val, parent);\n    }\n  }\n}","map":{"version":3,"names":["Base","Optional","constructor","type","condition","arguments","length","undefined","decode","stream","parent","call","size","val","encode"],"sources":["/Users/tomertal/Development/code/portfolio-site/node_modules/restructure/src/Optional.js"],"sourcesContent":["import {Base} from './Base.js';\n\nexport class Optional extends Base {\n  constructor(type, condition = true) {\n    super();\n    this.type = type;\n    this.condition = condition;\n  }\n\n  decode(stream, parent) {\n    let { condition } = this;\n    if (typeof condition === 'function') {\n      condition = condition.call(parent, parent);\n    }\n\n    if (condition) {\n      return this.type.decode(stream, parent);\n    }\n  }\n\n  size(val, parent) {\n    let { condition } = this;\n    if (typeof condition === 'function') {\n      condition = condition.call(parent, parent);\n    }\n\n    if (condition) {\n      return this.type.size(val, parent);\n    } else {\n      return 0;\n    }\n  }\n\n  encode(stream, val, parent) {\n    let { condition } = this;\n    if (typeof condition === 'function') {\n      condition = condition.call(parent, parent);\n    }\n\n    if (condition) {\n      return this.type.encode(stream, val, parent);\n    }\n  }\n}\n"],"mappings":"AAAA,SAAQA,IAAI,QAAO,WAAW;AAE9B,OAAO,MAAMC,QAAQ,SAASD,IAAI,CAAC;EACjCE,WAAWA,CAACC,IAAI,EAAoB;IAAA,IAAlBC,SAAS,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;IAChC,KAAK,CAAC,CAAC;IACP,IAAI,CAACF,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,SAAS,GAAGA,SAAS;EAC5B;EAEAI,MAAMA,CAACC,MAAM,EAAEC,MAAM,EAAE;IACrB,IAAI;MAAEN;IAAU,CAAC,GAAG,IAAI;IACxB,IAAI,OAAOA,SAAS,KAAK,UAAU,EAAE;MACnCA,SAAS,GAAGA,SAAS,CAACO,IAAI,CAACD,MAAM,EAAEA,MAAM,CAAC;IAC5C;IAEA,IAAIN,SAAS,EAAE;MACb,OAAO,IAAI,CAACD,IAAI,CAACK,MAAM,CAACC,MAAM,EAAEC,MAAM,CAAC;IACzC;EACF;EAEAE,IAAIA,CAACC,GAAG,EAAEH,MAAM,EAAE;IAChB,IAAI;MAAEN;IAAU,CAAC,GAAG,IAAI;IACxB,IAAI,OAAOA,SAAS,KAAK,UAAU,EAAE;MACnCA,SAAS,GAAGA,SAAS,CAACO,IAAI,CAACD,MAAM,EAAEA,MAAM,CAAC;IAC5C;IAEA,IAAIN,SAAS,EAAE;MACb,OAAO,IAAI,CAACD,IAAI,CAACS,IAAI,CAACC,GAAG,EAAEH,MAAM,CAAC;IACpC,CAAC,MAAM;MACL,OAAO,CAAC;IACV;EACF;EAEAI,MAAMA,CAACL,MAAM,EAAEI,GAAG,EAAEH,MAAM,EAAE;IAC1B,IAAI;MAAEN;IAAU,CAAC,GAAG,IAAI;IACxB,IAAI,OAAOA,SAAS,KAAK,UAAU,EAAE;MACnCA,SAAS,GAAGA,SAAS,CAACO,IAAI,CAACD,MAAM,EAAEA,MAAM,CAAC;IAC5C;IAEA,IAAIN,SAAS,EAAE;MACb,OAAO,IAAI,CAACD,IAAI,CAACW,MAAM,CAACL,MAAM,EAAEI,GAAG,EAAEH,MAAM,CAAC;IAC9C;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}